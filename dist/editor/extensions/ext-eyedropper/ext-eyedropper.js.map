{"version":3,"file":"ext-eyedropper.js","sources":["../../../../src/editor/extensions/ext-eyedropper/ext-eyedropper.js","../../../../src/editor/extensions/ext-eyedropper/locale/en.js","../../../../src/editor/extensions/ext-eyedropper/locale/fr.js","../../../../src/editor/extensions/ext-eyedropper/locale/zh-CN.js"],"sourcesContent":["/**\r\n * @file ext-eyedropper.js\r\n *\r\n * @license MIT\r\n *\r\n * @copyright 2010 Jeff Schiller\r\n * @copyright 2021 OptimistikSAS\r\n *\r\n */\r\n\r\nconst name = 'eyedropper'\r\n\r\nconst loadExtensionTranslation = async function (svgEditor) {\r\n  let translationModule\r\n  const lang = svgEditor.configObj.pref('lang')\r\n  try {\r\n    translationModule = await import(`./locale/${lang}.js`)\r\n  } catch (_error) {\r\n    console.warn(`Missing translation (${lang}) for ${name} - using 'en'`)\r\n    translationModule = await import('./locale/en.js')\r\n  }\r\n  svgEditor.i18next.addResourceBundle(lang, name, translationModule.default)\r\n}\r\n\r\nexport default {\r\n  name,\r\n  async init () {\r\n    const svgEditor = this\r\n    const { svgCanvas } = svgEditor\r\n    await loadExtensionTranslation(svgEditor)\r\n    const { ChangeElementCommand } = svgCanvas.history\r\n    // svgdoc = S.svgroot.parentNode.ownerDocument,\r\n    const addToHistory = (cmd) => { svgCanvas.undoMgr.addCommandToHistory(cmd) }\r\n    const currentStyle = {\r\n      fillPaint: 'red',\r\n      fillOpacity: 1.0,\r\n      strokePaint: 'black',\r\n      strokeOpacity: 1.0,\r\n      strokeWidth: 5,\r\n      strokeDashArray: null,\r\n      opacity: 1.0,\r\n      strokeLinecap: 'butt',\r\n      strokeLinejoin: 'miter'\r\n    }\r\n    const { $id, $click } = svgCanvas\r\n\r\n    /**\r\n     *\r\n     * @param {module:svgcanvas.SvgCanvas#event:ext_selectedChanged|module:svgcanvas.SvgCanvas#event:ext_elementChanged} opts\r\n     * @returns {void}\r\n     */\r\n    const getStyle = (opts) => {\r\n      // if we are in eyedropper mode, we don't want to disable the eye-dropper tool\r\n      const mode = svgCanvas.getMode()\r\n      if (mode === 'eyedropper') { return }\r\n\r\n      const tool = $id('tool_eyedropper')\r\n      // enable-eye-dropper if one element is selected\r\n      let elem = null\r\n      if (!opts.multiselected && opts.elems[0] &&\r\n        !['svg', 'g', 'use'].includes(opts.elems[0].nodeName)\r\n      ) {\r\n        elem = opts.elems[0]\r\n        tool.classList.remove('disabled')\r\n        // grab the current style\r\n        currentStyle.fillPaint = elem.getAttribute('fill') || 'black'\r\n        currentStyle.fillOpacity = elem.getAttribute('fill-opacity') || 1.0\r\n        currentStyle.strokePaint = elem.getAttribute('stroke')\r\n        currentStyle.strokeOpacity = elem.getAttribute('stroke-opacity') || 1.0\r\n        currentStyle.strokeWidth = elem.getAttribute('stroke-width')\r\n        currentStyle.strokeDashArray = elem.getAttribute('stroke-dasharray')\r\n        currentStyle.strokeLinecap = elem.getAttribute('stroke-linecap')\r\n        currentStyle.strokeLinejoin = elem.getAttribute('stroke-linejoin')\r\n        currentStyle.opacity = elem.getAttribute('opacity') || 1.0\r\n        // disable eye-dropper tool\r\n      } else {\r\n        tool.classList.add('disabled')\r\n      }\r\n    }\r\n\r\n    return {\r\n      name: svgEditor.i18next.t(`${name}:name`),\r\n      callback () {\r\n        // Add the button and its handler(s)\r\n        const title = `${name}:buttons.0.title`\r\n        const key = `${name}:buttons.0.key`\r\n        const buttonTemplate = `\r\n        <se-button id=\"tool_eyedropper\" title=\"${title}\" src=\"eye_dropper.svg\" shortcut=${key}></se-button>\r\n        `\r\n        svgCanvas.insertChildAtIndex($id('tools_left'), buttonTemplate, 12)\r\n        $click($id('tool_eyedropper'), () => {\r\n          if (this.leftPanel.updateLeftPanel('tool_eyedropper')) {\r\n            svgCanvas.setMode('eyedropper')\r\n          }\r\n        })\r\n      },\r\n      // if we have selected an element, grab its paint and enable the eye dropper button\r\n      selectedChanged: getStyle,\r\n      elementChanged: getStyle,\r\n      mouseDown (opts) {\r\n        const mode = svgCanvas.getMode()\r\n        if (mode === 'eyedropper') {\r\n          const e = opts.event\r\n          const { target } = e\r\n          if (!['svg', 'g', 'use'].includes(target.nodeName)) {\r\n            const changes = {}\r\n\r\n            const change = function (elem, attrname, newvalue) {\r\n              changes[attrname] = elem.getAttribute(attrname)\r\n              elem.setAttribute(attrname, newvalue)\r\n            }\r\n\r\n            if (currentStyle.fillPaint) { change(target, 'fill', currentStyle.fillPaint) }\r\n            if (currentStyle.fillOpacity) { change(target, 'fill-opacity', currentStyle.fillOpacity) }\r\n            if (currentStyle.strokePaint) { change(target, 'stroke', currentStyle.strokePaint) }\r\n            if (currentStyle.strokeOpacity) { change(target, 'stroke-opacity', currentStyle.strokeOpacity) }\r\n            if (currentStyle.strokeWidth) { change(target, 'stroke-width', currentStyle.strokeWidth) }\r\n            if (currentStyle.strokeDashArray) { change(target, 'stroke-dasharray', currentStyle.strokeDashArray) }\r\n            if (currentStyle.opacity) { change(target, 'opacity', currentStyle.opacity) }\r\n            if (currentStyle.strokeLinecap) { change(target, 'stroke-linecap', currentStyle.strokeLinecap) }\r\n            if (currentStyle.strokeLinejoin) { change(target, 'stroke-linejoin', currentStyle.strokeLinejoin) }\r\n\r\n            addToHistory(new ChangeElementCommand(target, changes))\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","export default {\r\n  name: 'eyedropper',\r\n  buttons: [\r\n    {\r\n      title: 'Eye Dropper Tool',\r\n      key: 'I'\r\n    }\r\n  ]\r\n}\r\n","export default {\r\n  name: 'pipette',\r\n  buttons: [\r\n    {\r\n      title: 'Outil pipette',\r\n      key: 'I'\r\n    }\r\n  ]\r\n}\r\n","export default {\r\n  name: '滴管',\r\n  buttons: [\r\n    {\r\n      title: '滴管工具',\r\n      key: 'I'\r\n    }\r\n  ]\r\n}\r\n"],"names":["name","loadExtensionTranslation","async","svgEditor","translationModule","lang","configObj","pref","__variableDynamicImportRuntime0__","_error","console","warn","Promise","i18next","addResourceBundle","default","this","svgCanvas","ChangeElementCommand","history","currentStyle","fillPaint","fillOpacity","strokePaint","strokeOpacity","strokeWidth","strokeDashArray","opacity","strokeLinecap","strokeLinejoin","$id","$click","getStyle","opts","getMode","tool","elem","multiselected","elems","includes","nodeName","classList","add","remove","getAttribute","t","callback","title","key","buttonTemplate","insertChildAtIndex","leftPanel","updateLeftPanel","setMode","selectedChanged","elementChanged","mouseDown","e","event","target","changes","change","attrname","newvalue","setAttribute","cmd","undoMgr","addCommandToHistory","buttons"],"mappings":"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"}