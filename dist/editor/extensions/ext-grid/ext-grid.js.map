{"version":3,"file":"ext-grid.js","sources":["../../../../src/editor/extensions/ext-grid/ext-grid.js","../../../../src/editor/extensions/ext-grid/locale/en.js","../../../../src/editor/extensions/ext-grid/locale/fr.js","../../../../src/editor/extensions/ext-grid/locale/zh-CN.js"],"sourcesContent":["/**\r\n * @file ext-grid.js\r\n *\r\n * @license Apache-2.0\r\n *\r\n * @copyright 2010 Redou Mine, 2010 Alexis Deveria\r\n *\r\n */\r\n\r\nconst name = 'grid'\r\n\r\nconst loadExtensionTranslation = async function (svgEditor) {\r\n  let translationModule\r\n  const lang = svgEditor.configObj.pref('lang')\r\n  try {\r\n    translationModule = await import(`./locale/${lang}.js`)\r\n  } catch (_error) {\r\n    console.warn(`Missing translation (${lang}) for ${name} - using 'en'`)\r\n    translationModule = await import('./locale/en.js')\r\n  }\r\n  svgEditor.i18next.addResourceBundle(lang, name, translationModule.default)\r\n}\r\n\r\nexport default {\r\n  name,\r\n  async init () {\r\n    const svgEditor = this\r\n    await loadExtensionTranslation(svgEditor)\r\n    const { svgCanvas } = svgEditor\r\n    const { $id, $click, NS } = svgCanvas\r\n    const svgdoc = $id('svgcanvas').ownerDocument\r\n    const { assignAttributes } = svgCanvas\r\n    const hcanvas = document.createElement('canvas')\r\n    const canvBG = $id('canvasBackground')\r\n    const units = svgCanvas.getTypeMap() // Assumes prior `init()` call on `units.js` module\r\n    const intervals = [0.01, 0.1, 1, 10, 100, 1000]\r\n    let showGrid = svgEditor.configObj.curConfig.showGrid || false\r\n\r\n    hcanvas.style.display = 'none'\r\n    svgEditor.$svgEditor.appendChild(hcanvas)\r\n\r\n    const canvasGrid = svgdoc.createElementNS(NS.SVG, 'svg')\r\n    assignAttributes(canvasGrid, {\r\n      id: 'canvasGrid',\r\n      width: '100%',\r\n      height: '100%',\r\n      x: 0,\r\n      y: 0,\r\n      overflow: 'visible',\r\n      display: 'none'\r\n    })\r\n    canvBG.appendChild(canvasGrid)\r\n    const gridDefs = svgdoc.createElementNS(NS.SVG, 'defs')\r\n    // grid-pattern\r\n    const gridPattern = svgdoc.createElementNS(NS.SVG, 'pattern')\r\n    assignAttributes(gridPattern, {\r\n      id: 'gridpattern',\r\n      patternUnits: 'userSpaceOnUse',\r\n      x: 0, // -(value.strokeWidth / 2), // position for strokewidth\r\n      y: 0, // -(value.strokeWidth / 2), // position for strokewidth\r\n      width: 100,\r\n      height: 100\r\n    })\r\n\r\n    const gridimg = svgdoc.createElementNS(NS.SVG, 'image')\r\n    assignAttributes(gridimg, {\r\n      x: 0,\r\n      y: 0,\r\n      width: 100,\r\n      height: 100\r\n    })\r\n    gridPattern.append(gridimg)\r\n    gridDefs.append(gridPattern)\r\n    $id('canvasGrid').appendChild(gridDefs)\r\n\r\n    // grid-box\r\n    const gridBox = svgdoc.createElementNS(NS.SVG, 'rect')\r\n    assignAttributes(gridBox, {\r\n      width: '100%',\r\n      height: '100%',\r\n      x: 0,\r\n      y: 0,\r\n      'stroke-width': 0,\r\n      stroke: 'none',\r\n      fill: 'url(#gridpattern)',\r\n      style: 'pointer-events: none; display:visible;'\r\n    })\r\n    $id('canvasGrid').appendChild(gridBox)\r\n\r\n    /**\r\n     *\r\n     * @param {Float} zoom\r\n     * @returns {void}\r\n     */\r\n    const updateGrid = (zoom) => {\r\n      // TODO: Try this with <line> elements, then compare performance difference\r\n      const unit = units[svgEditor.configObj.curConfig.baseUnit] // 1 = 1px\r\n      const uMulti = unit * zoom\r\n      // Calculate the main number interval\r\n      const rawM = 100 / uMulti\r\n      let multi = 1\r\n      intervals.some((num) => {\r\n        multi = num\r\n        return rawM <= num\r\n      })\r\n      const bigInt = multi * uMulti\r\n\r\n      // Set the canvas size to the width of the container\r\n      hcanvas.width = bigInt\r\n      hcanvas.height = bigInt\r\n      const ctx = hcanvas.getContext('2d')\r\n      const curD = 0.5\r\n      const part = bigInt / 10\r\n\r\n      ctx.globalAlpha = 0.2\r\n      ctx.strokeStyle = svgEditor.configObj.curConfig.gridColor\r\n      for (let i = 1; i < 10; i++) {\r\n        const subD = Math.round(part * i) + 0.5\r\n        // const lineNum = (i % 2)?12:10;\r\n        const lineNum = 0\r\n        ctx.moveTo(subD, bigInt)\r\n        ctx.lineTo(subD, lineNum)\r\n        ctx.moveTo(bigInt, subD)\r\n        ctx.lineTo(lineNum, subD)\r\n      }\r\n      ctx.stroke()\r\n      ctx.beginPath()\r\n      ctx.globalAlpha = 0.5\r\n      ctx.moveTo(curD, bigInt)\r\n      ctx.lineTo(curD, 0)\r\n\r\n      ctx.moveTo(bigInt, curD)\r\n      ctx.lineTo(0, curD)\r\n      ctx.stroke()\r\n\r\n      const datauri = hcanvas.toDataURL('image/png')\r\n      gridimg.setAttribute('width', bigInt)\r\n      gridimg.setAttribute('height', bigInt)\r\n      gridimg.parentNode.setAttribute('width', bigInt)\r\n      gridimg.parentNode.setAttribute('height', bigInt)\r\n      svgCanvas.setHref(gridimg, datauri)\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns {void}\r\n     */\r\n    const gridUpdate = () => {\r\n      if (showGrid) {\r\n        updateGrid(svgCanvas.getZoom())\r\n      }\r\n      $id('canvasGrid').style.display = (showGrid) ? 'block' : 'none'\r\n      $id('view_grid').pressed = showGrid\r\n    }\r\n    return {\r\n      name: svgEditor.i18next.t(`${name}:name`),\r\n      zoomChanged (zoom) {\r\n        if (showGrid) { updateGrid(zoom) }\r\n      },\r\n      callback () {\r\n        // Add the button and its handler(s)\r\n        const buttonTemplate = document.createElement('template')\r\n        const title = `${name}:buttons.0.title`\r\n        buttonTemplate.innerHTML = `\r\n          <se-button id=\"view_grid\" title=\"${title}\" src=\"grid.svg\"></se-button>\r\n        `\r\n        $id('editor_panel').append(buttonTemplate.content.cloneNode(true))\r\n        $click($id('view_grid'), () => {\r\n          svgEditor.configObj.curConfig.showGrid = showGrid = !showGrid\r\n          gridUpdate()\r\n        })\r\n        if (showGrid) {\r\n          gridUpdate()\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","export default {\r\n  name: 'View Grid',\r\n  buttons: [\r\n    {\r\n      title: 'Show/Hide Grid'\r\n    }\r\n  ]\r\n}\r\n","export default {\r\n  name: 'Grille',\r\n  buttons: [\r\n    {\r\n      title: 'Afficher/Cacher Grille'\r\n    }\r\n  ]\r\n}\r\n","export default {\r\n  name: '网格视图',\r\n  buttons: [\r\n    {\r\n      title: '显示/隐藏网格'\r\n    }\r\n  ]\r\n}\r\n"],"names":["loadExtensionTranslation","async","svgEditor","translationModule","lang","configObj","pref","__variableDynamicImportRuntime0__","_error","console","warn","Promise","i18next","addResourceBundle","default","name","this","svgCanvas","$id","$click","NS","svgdoc","ownerDocument","assignAttributes","hcanvas","document","createElement","canvBG","units","getTypeMap","intervals","showGrid","curConfig","style","display","$svgEditor","appendChild","canvasGrid","createElementNS","SVG","id","width","height","x","y","overflow","gridDefs","gridPattern","patternUnits","gridimg","append","gridBox","stroke","fill","updateGrid","zoom","uMulti","baseUnit","rawM","multi","some","num","bigInt","ctx","getContext","curD","part","globalAlpha","strokeStyle","gridColor","i","subD","Math","round","lineNum","moveTo","lineTo","beginPath","datauri","toDataURL","setAttribute","parentNode","setHref","gridUpdate","getZoom","pressed","t","zoomChanged","callback","buttonTemplate","title","innerHTML","content","cloneNode","buttons"],"mappings":"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"}