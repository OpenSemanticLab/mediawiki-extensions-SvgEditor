{"version":3,"file":"ext-helloworld.js","sources":["../../../../src/editor/extensions/ext-helloworld/ext-helloworld.js","../../../../src/editor/extensions/ext-helloworld/locale/en.js","../../../../src/editor/extensions/ext-helloworld/locale/fr.js","../../../../src/editor/extensions/ext-helloworld/locale/zh-CN.js"],"sourcesContent":["/**\r\n * @file ext-helloworld.js\r\n *\r\n * @license MIT\r\n *\r\n * @copyright 2010 Alexis Deveria\r\n *\r\n */\r\n\r\n/**\r\n* This is a very basic SVG-Edit extension. It adds a \"Hello World\" button in\r\n*  the left (\"mode\") panel. Clicking on the button, and then the canvas\r\n*  will show the user the point on the canvas that was clicked on.\r\n*/\r\n\r\nconst name = 'helloworld'\r\n\r\nconst loadExtensionTranslation = async function (svgEditor) {\r\n  let translationModule\r\n  const lang = svgEditor.configObj.pref('lang')\r\n  try {\r\n    translationModule = await import(`./locale/${lang}.js`)\r\n  } catch (_error) {\r\n    console.warn(`Missing translation (${lang}) for ${name} - using 'en'`)\r\n    translationModule = await import('./locale/en.js')\r\n  }\r\n  svgEditor.i18next.addResourceBundle(lang, name, translationModule.default)\r\n}\r\n\r\nexport default {\r\n  name,\r\n  async init ({ _importLocale }) {\r\n    const svgEditor = this\r\n    await loadExtensionTranslation(svgEditor)\r\n    const { svgCanvas } = svgEditor\r\n    const { $id, $click } = svgCanvas\r\n    return {\r\n      name: svgEditor.i18next.t(`${name}:name`),\r\n      callback () {\r\n        // Add the button and its handler(s)\r\n        const buttonTemplate = document.createElement('template')\r\n        const title = `${name}:buttons.0.title`\r\n        buttonTemplate.innerHTML = `\r\n        <se-button id=\"hello_world\" title=\"${title}\" src=\"hello_world.svg\"></se-button>\r\n        `\r\n        $id('tools_left').append(buttonTemplate.content.cloneNode(true))\r\n        $click($id('hello_world'), () => {\r\n          svgCanvas.setMode('hello_world')\r\n        })\r\n      },\r\n      // This is triggered when the main mouse button is pressed down\r\n      // on the editor canvas (not the tool panels)\r\n      mouseDown () {\r\n        // Check the mode on mousedown\r\n        if (svgCanvas.getMode() === 'hello_world') {\r\n          // The returned object must include \"started\" with\r\n          // a value of true in order for mouseUp to be triggered\r\n          return { started: true }\r\n        }\r\n        return undefined\r\n      },\r\n\r\n      // This is triggered from anywhere, but \"started\" must have been set\r\n      // to true (see above). Note that \"opts\" is an object with event info\r\n      mouseUp (opts) {\r\n        // Check the mode on mouseup\r\n        if (svgCanvas.getMode() === 'hello_world') {\r\n          const zoom = svgCanvas.getZoom()\r\n\r\n          // Get the actual coordinate by dividing by the zoom value\r\n          const x = opts.mouse_x / zoom\r\n          const y = opts.mouse_y / zoom\r\n\r\n          // We do our own formatting\r\n          const text = svgEditor.i18next.t(`${name}:text`, { x, y })\r\n          // Show the text using the custom alert function\r\n          alert(text)\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","export default {\r\n  name: 'Hello World',\r\n  text: 'Hello World!\\n\\nYou clicked here: {{x}}, {{y}}',\r\n  buttons: [\r\n    {\r\n      title: \"Say 'Hello World'\"\r\n    }\r\n  ]\r\n}\r\n","export default {\r\n  name: 'Bonjour le Monde',\r\n  text: 'Bonjour le Monde!\\n\\nVous avez cliqué ici: {{x}}, {{y}}',\r\n  buttons: [\r\n    {\r\n      title: \"Dire 'Bonjour le Monde'\"\r\n    }\r\n  ]\r\n}\r\n","export default {\r\n  name: 'Hello World',\r\n  text: 'Hello World!\\n\\n 请点击: {{x}}, {{y}}',\r\n  buttons: [\r\n    {\r\n      title: \"输出 'Hello World'\"\r\n    }\r\n  ]\r\n}\r\n"],"names":["name","loadExtensionTranslation","async","svgEditor","translationModule","lang","configObj","pref","__variableDynamicImportRuntime0__","_error","console","warn","Promise","i18next","addResourceBundle","default","this","svgCanvas","$id","$click","t","callback","buttonTemplate","document","createElement","title","innerHTML","append","content","cloneNode","setMode","mouseDown","getMode","started","mouseUp","opts","zoom","getZoom","x","mouse_x","y","mouse_y","text","alert","buttons"],"mappings":";;;;;;;;AAeA,MAAMA,EAAO,aAEPC,yBAA2BC,eAAgBC,OAC3CC,QACEC,EAAOF,EAAUG,UAAUC,KAAK,YAEpCH,+cAA0BI,oBAAmBH,UAC7C,MAAOI,GACPC,QAAQC,oCAA6BN,mBAAaL,oBAClDI,QAA0BQ,+CAE5BT,EAAUU,QAAQC,kBAAkBT,EAAML,EAAMI,EAAkBW,UAGpE,MAAe,CACbf,KAAAA,sBAEQG,EAAYa,WACZf,yBAAyBE,SACzBc,UAAEA,GAAcd,GAChBe,IAAEA,EAAFC,OAAOA,GAAWF,QACjB,CACLjB,KAAMG,EAAUU,QAAQO,YAAKpB,YAC7BqB,iBAEQC,EAAiBC,SAASC,cAAc,YACxCC,YAAWzB,sBACjBsB,EAAeI,iEACsBD,oDAErCP,EAAI,cAAcS,OAAOL,EAAeM,QAAQC,WAAU,IAC1DV,EAAOD,EAAI,gBAAgB,KACzBD,EAAUa,QAAQ,mBAKtBC,eAE8B,gBAAxBd,EAAUe,gBAGL,CAAEC,SAAS,IAOtBC,QAASC,MAEqB,gBAAxBlB,EAAUe,UAA6B,OACnCI,EAAOnB,EAAUoB,UAGjBC,EAAIH,EAAKI,QAAUH,EACnBI,EAAIL,EAAKM,QAAUL,EAGnBM,EAAOvC,EAAUU,QAAQO,YAAKpB,WAAa,CAAEsC,EAAAA,EAAGE,EAAAA,IAEtDG,MAAMD,gDC5ED,CACb1C,KAAM,cACN0C,KAAM,iDACNE,QAAS,CACP,CACEnB,MAAO,iECLE,CACbzB,KAAM,mBACN0C,KAAM,0DACNE,QAAS,CACP,CACEnB,MAAO,uECLE,CACbzB,KAAM,cACN0C,KAAM,qCACNE,QAAS,CACP,CACEnB,MAAO"}